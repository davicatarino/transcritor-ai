// index.js

require('dotenv').config();
const express = require('express');
const multer = require('multer');
const fs = require('fs');
const path = require('path');
const {OpenAI } = require('openai');

const app = express();

// Configuração do Multer para preservar a extensão do arquivo
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, 'uploads/');
  },
  filename: function (req, file, cb) {
    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);
    cb(null, uniqueSuffix + path.extname(file.originalname));
  }
});
const upload = multer({ storage: storage });

const openai = new OpenAI({
  apiKey: process.env.OPENAI_KEY,
});

app.use(express.static('public'));

app.post('/transcrever', upload.single('audio'), async (req, res) => {
  try {
    const audioPath = req.file.path;
console.log(audioPath)
console.log('Detalhes do arquivo enviado:', req.file);

    const response = await openai.audio.transcriptions.create({

      file: fs.createReadStream(audioPath),
      model: "whisper-1",
    }
    );



    res.json({ transcricao: response.data.text });
  } catch (error) {
    console.error(error.response ? error.response.data : error.message);
    res.status(500).json({ erro: 'Ocorreu um erro ao transcrever o áudio.' });
  }
});

app.listen(3000, () => {
  console.log('Servidor rodando em http://localhost:3000');
});
